{% raw -%}
name: Python CI

on:
  push:
  pull_request:

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
# This will ensure that only one commit will be running tests at a time on each PR.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    # Run on external PRs and pushes to branches on the repo
    # This is to avoid double running on PRs from internal branches
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
{%- endraw %}
{% if 'poetry' in boiler.python_package_managers %}
      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-1.6.1-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .venv
          key: pydeps-{% raw %}${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: Install the project
        run: poetry install --no-interaction
{% if 'django' in boiler.frameworks %}
      - name: Test
        run: poetry run python manage.py test
{% endif %}
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --output-format=github .
        continue-on-error: true
{% endif -%}
